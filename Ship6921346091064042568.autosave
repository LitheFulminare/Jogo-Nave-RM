class Ship {
  
  private PVector pos;
  private PVector dir;
  private float vel = 350f;
  private boolean left = false;
  private boolean right = false;
  
  Ship(PVector pos, PVector dir) 
  {
    this.pos = pos;
    this.dir = dir;
  } 
  
  void update(float et) 
  {
    if (left) dir.rotate(-PI*1.5 * et);
    if (right) dir.rotate(PI*1.5 * et);
    PVector m = PVector.mult(dir, vel * et);
    pos.add(m);
  }
  
  void render() 
  {    triangle(pos.x, pos.y, pos.x-70, pos.y-20, pos.x-70,pos.y+20);
  
    //circle(pos.x, pos.y, 50);
    
  }
  
  Shot shoot() {
    return new Shot(pos.copy(), dir.copy());
  }
  
  void keyP(int k, int kc) {
    if (k == CODED) {
      if (kc == LEFT) {
        left = true;
      }
      else if (kc == RIGHT) {
        right = true;
      }
    }
  }
  
  void keyR(int k, int kc) {
    if (k == CODED) {
      if (kc == LEFT) {
        left = false;
      }
      else if (kc == RIGHT) {
        right = false;
      }
    }
  }
  PVector getPos()
  {
    return pos;
  }
}
